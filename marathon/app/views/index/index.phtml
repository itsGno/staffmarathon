

</div>

<div id="map" ></div>

<div>

     
<script type="text/javascript">
    var map;
    var messagewindow;
   function initMap() {
    var directionsService = new google.maps.DirectionsService;
    var directionsDisplay = new google.maps.DirectionsRenderer;
    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 6,
      center: {lat: 41.85, lng: -87.65},
      streetViewControl: false,
      mapTypeControl: false,
      fullscreenControl: false
    });
    directionsDisplay.setMap(map);
  
    $(document).ready(function() {
      calculateAndDisplayRoute(directionsService, directionsDisplay);
    });

    var data = JSON.parse('<?php echo json_encode($page->items) ?>');
    for(var i=0;i<data.length;i++){
      if(data[i].status==0){
      console.log(data[i].header);
      var infowindow = new google.maps.InfoWindow;
      var position = new google.maps.LatLng(data[i].lag,data[i].lng);
      var marker = new google.maps.Marker({
        position: position,
        map: map,
        label: 'E'
      });
      var infowincontent = document.createElement('div');
      var strong = document.createElement('h5');
      strong.textContent = data[i].header;
      infowincontent.appendChild(strong);
      infowincontent.appendChild(document.createElement('br'));
      var text = document.createElement('text');
      text.textContent = data[i].detail;
      infowincontent.appendChild(text);
      infowincontent.appendChild(document.createElement('br'));
      var a = document.createElement('a');
      var linkText = document.createTextNode("More detail..");
      a.appendChild(linkText);
      a.title = "View";
      a.href = "/Marathon/marathon/emergencyreport/edit/"+ data[i].id;
      infowincontent.appendChild(a);

      bindInfoWindow(marker,map,infowindow,infowincontent);
      }
    }
    data = JSON.parse('<?php echo json_encode(Problemreport::find(null)) ?>');

    for(var i=0;i<data.length;i++){
      if(data[i].status==0){      
      console.log(data[i].header);
      var infowindow = new google.maps.InfoWindow;
      var position = new google.maps.LatLng(data[i].lag,data[i].lng);
      var marker = new google.maps.Marker({
        position: position,
        map: map,
        label: "P"
      });
      var infowincontent = document.createElement('div');
      var strong = document.createElement('h5');
      strong.textContent = data[i].header;
      infowincontent.appendChild(strong);
      infowincontent.appendChild(document.createElement('br'));
      var text = document.createElement('text');
      text.textContent = data[i].detail;
      infowincontent.appendChild(text);

      infowincontent.appendChild(document.createElement('br'));
      var a = document.createElement('a');
      var linkText = document.createTextNode("More detail..");
      a.appendChild(linkText);
      a.title = "View";
      a.href = "/Marathon/marathon/problemreport/edit/"+ data[i].id;
      infowincontent.appendChild(a);

      bindInfoWindow(marker,map,infowindow,infowincontent);
    }
    }
   }
  function bindInfoWindow(marker, map, infowindow, html) {
    marker.addListener('click', function() {
        infowindow.setContent(html);
        infowindow.open(map, marker);
    });
  } 

  

   function calculateAndDisplayRoute(directionsService, directionsDisplay) {
        var waypts = [];
        var checkboxArray = [ new google.maps.LatLng(18.808265, 98.954752),
                              new google.maps.LatLng(18.800597, 98.951306),
                              new google.maps.LatLng(18.795357, 98.961808),
                              new google.maps.LatLng(18.805465, 98.960038),
                              new google.maps.LatLng(18.808265, 98.954752)];
        for (var i = 0; i < checkboxArray.length; i++) {
            waypts.push({
              location: checkboxArray[i],
              stopover: true
            });
        }
        directionsService.route({
          origin: {lat: 18.808265, lng: 98.954752},
          destination:{lat: 18.808265, lng: 98.954752},
          waypoints: waypts,
          optimizeWaypoints: true,
          travelMode: 'WALKING',
        }, function(response, status) {
          if (status === 'OK') {
            directionsDisplay.setDirections(response);
            var route = response.routes[0];
          } else {
            window.alert('Directions request failed due to ' + status);
          }
        });
   }

   function downloadUrl(url, callback) {
     var request = window.ActiveXObject ?
         new ActiveXObject('Microsoft.XMLHTTP') :
         new XMLHttpRequest;

     request.onreadystatechange = function() {
       if (request.readyState == 4) {
         request.onreadystatechange = doNothing;
         callback(request.responseText, request.status);
       }
     };

     request.open('GET', url, true);
     request.send(null);
   }

   
   function doNothing () {
   }

</script>
